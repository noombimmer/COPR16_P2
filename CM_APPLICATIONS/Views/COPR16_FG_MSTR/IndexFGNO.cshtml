
@model IEnumerable<CM_APPLICATIONS.COPR16_FG_MSTR>

@{
    ViewBag.Title = "FG MASTER";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ERP VOLUME SYNC (ATH)</h2>

<p>
    @Html.ActionLink("VIEW BY MODEL", "IndexERP", "COPR16_FG_MSTR", new { @class = "btn btn-primary button" })
    @Html.ActionLink("VIEW BY FG NO.", "IndexFGNO", "COPR16_FG_MSTR", new { @class = "btn btn-primary button" })
</p>
<style>
    .dataTables_wrapper {
        float: left !important;
        width: 99% !important;
        margin-left: 0px !important;
    }

    table.dataTable thead tr {
        background-color: #005495;
        color: #fff;
    }

    table.dataTable {
        margin-left: 0px !important;
        width: 100% !important;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="form-group">
        @Html.Label("PERIOD DATE : ", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="form-group" style="display:flex;flex-wrap:nowrap;width:400px;height:35px;overflow:hidden">
            <div class="col-md-10" style="display:flex;flex-wrap:nowrap">
                @Html.Editor("FROM_DATE", new { htmlAttributes = new { @class = "form-control from-date", @readonly = "true", @name = "FROM_DATE", @style = "width:120px;" } })
                @Html.Hidden("hidden_FROM_DATE", "")
                <input type="button" style="width: 40px;position:relative;top:0px;background-image: url(/Content/images/calendar.png);background-position: 0px 0px;background-repeat: no-repeat;background-size: 35px 30px;" class="edit-from-date-picker">
            </div>@Html.Label("TO : ", htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10" style="display:flex;flex-wrap:nowrap">
                @Html.Editor("TO_DATE", new { htmlAttributes = new { @class = "form-control to-date", @readonly = "true", @name = "TO_DATE", @style = "width:120px;" } })
                @Html.Hidden("hidden_TO_DATE", "")
                <input type="button" style="width: 40px;position:relative;top:0px;background-image: url(/Content/images/calendar.png);background-position: 0px 0px;background-repeat: no-repeat;background-size: 35px 30px;" class="edit-to-date-picker">
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-1">FG NO :</label>
        <div class="col-md-10" style="display:flex;flex-wrap:nowrap">
            @Html.Editor("FGNO", new { htmlAttributes = new { @class = "form-control FGNO", } })
            @*<input type="button"  class="edit-from-date-picker searchBtn">*@
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-1 col-md-10">
            <input type="button" value="Search" class="btn btn-primary button refreshBtn" />
            <input type="button" value="Clear" class="btn btn-secondary button resetBtn" />
        </div>
    </div>
</div>
}
<table class="table table-lists stripe">
    <thead>
        <tr>
            <th>
                MODEL
            </th>
            <th class="username">
                VOLUME (QTY)
            </th>
            <th class="username">
                WITHOUT CONDITION (5,000)
            </th>
            <th class="username">
                WITH CONDITION (10,000)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.MOD_BY)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MOD_DATE)
                </th>*@

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FG_NO)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FG_NAME)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FG_DESC)
                </td>
                <td class="username">
                    @Html.DisplayFor(modelItem => item.FLGACT)
                </td>
                <td class="username">
                    @Html.DisplayFor(modelItem => item.ADATE)
                </td>
                <td class="username">
                    @Html.DisplayFor(modelItem => item.CT_BY)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.MOD_BY)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MOD_DATE)
                    </td>*@

                <td class="command">
                    @*@Html.ActionLink("Edit", "Edit", new { id = item.FG_NO }) |
                        @Html.ActionLink("Details", "Details", new { id = item.FG_NO }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.FG_NO })*@

                    @Html.ActionLink("Edit", "Edit", "COPR16_FG_MSTR", new { id = item.FG_NO }, new { @class = "btn btn-primary button" }) |
                    @Html.ActionLink("View", "Details", "COPR16_FG_MSTR", new { id = item.FG_NO }, new { @class = "btn btn-primary button" }) |
                    @{

                        if (item.FLGACT == true)
                        {
                            @Html.ActionLink("Deactivate", "Deactive", "COPR16_FG_MSTR", new { id = item.FG_NO }, new { @class = "btn btn-primary button" });
                        }
                        else
                        {
                            @Html.ActionLink("Activate", "Active", "COPR16_FG_MSTR", new { id = item.FG_NO }, new { @class = "btn btn-primary button" });
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<script>

    var tbVar = $('.table-lists').DataTable({
        "paging": false,
        "ordering": false,
        "info": true,
        "stripe": true,
        "filter":false,
        "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
        "language": {
            "lengthMenu": "Display  _MENU_  Items / Page",
            "zeroRecords": "<center style='color:blue;'><b>items not found</b></center>",
            "info": "Showing _START_-_END_ of _TOTAL_ items",
            "infoEmpty": "",
            "infoFiltered": "(filtered from _MAX_ total items)"
        },
        columnDefs: [
            { className: 'text-center', targets: [2] }
        ]
    });
    tbVar.clear().draw();
    function getDataFromServer(result) {
        tbVar.clear().draw();

        var rowResult = result.Data;
        $.each(rowResult, function (i, singleRow) {
            //console.log(singleRow);
            var strText = Object.keys(singleRow);
            var date = new Date(parseInt(singleRow.ADATE.substr(6)));
            var editBtn = "<input type='button' name='edit_" + singleRow.FG_NO + "' id='edit_" + singleRow.FG_NO + "' value='edit' class='btn btn-primary button edit_" + singleRow.FG_NO + "'><input type='hidden' id='hFG_NO' name='hFG_NO' value='" + singleRow.FG_NO+"'>";
            var rowdata = [singleRow.FG_NO, singleRow.FG_NAME, singleRow.FG_DESC, singleRow.FLGACT, dateFormat(date, 'dd mmm yyyy h:MM:ss tt'), singleRow.CT_BY, editBtn];
            var rows = tbVar.row.add(rowdata).draw(false).node();
        });

    }
    function refreshData() {
        var FGNO = $('.FG-NO').val() != null ? $('.FG-NO').val() : null;
        var FGDESC = $('.FG-DESC').val() != null ? $('.FG-DESC').val() : null;
        var FGNAME = $('.FG-NAME').val() != null ? $('.FG-NAME').val() : null;
        var keyHidden = $('input[name="__RequestVerificationToken"]').val();
        var urlText = "@Url.Action("getFGList","COPR16_FG_MSTR")";
        var dataSumbit = {
            "__RequestVerificationToken": keyHidden,
            "FGNO": FGNO,
            "FGDESC": FGDESC,
            "FGNAME": FGNAME
        };
        console.log(dataSumbit);
        $.ajax({
            type: "POST",
            url: urlText,     //your action
            //data: $('form').serialize(),   //your form name.it takes all the values of model
            //dataType: 'json',
            data: dataSumbit,
            success: function (result) {
                console.log(result);
                //updateInfo(result);
                getDataFromServer(result);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                //alert("error:" + errorThrown);
                var obj = $(jqXHR.responseText);
                var title = obj.filter('title')[0];
                var details = obj.filter('span')[0];
                console.log(title);
                $('#ModalBodyError').html(title.innerHTML + '<br>' + details.innerHTML);
                $('#ModalError').modal('show');
            }
        });
    }
    $('.resetBtn').click(function () {
        getDataFromServer();
    });
    $('.refreshBtn').click(function () {
        refreshData();
    });
    $("body").on("click", "input[name^=edit]", function () {
        var fg_no = $(this).parent().find('#hFG_NO').val();

        console.log(fg_no);
        var url = "@Url.Action("Edit","COPR16_FG_MSTR")/" + fg_no;
        $(location).attr('href', url);
    });
    $(document).on('keypress', function (e) {
        if (e.which == 13) {
            refreshData();
        }
    });
</script>