@{
    ViewBag.Title = "COP RUNNING TRACKING";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var ModelList = (List<SelectListItem>)ViewBag.ModelList;
}

<h2>COPR16 VOLUME TRACKING</h2>

<div class="form-horizontal">
    <div class="form-group">
        @Html.Label("FROM DATE : ", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-10" style="display:flex;flex-wrap:nowrap">
            @Html.Editor("FROM_DATE", new { htmlAttributes = new { @class = "form-control from-date", @readonly = "true", @name = "FROM_DATE", @style = "width:120px;" } })
            @Html.Hidden("hidden_FROM_DATE", "")
            <input type="button" style="width: 40px;position:relative;top:0px;background-image: url(/Content/images/calendar.png);background-position: 0px 0px;background-repeat: no-repeat;background-size: 35px 30px;" class="edit-from-date-picker">
        </div>

    </div>
    <div class="form-group">
        @Html.Label("TO DATE : ", htmlAttributes: new { @class = "control-label col-md-1" })
        <div class="col-md-10" style="display:flex;flex-wrap:nowrap">
            @Html.Editor("TO_DATE", new { htmlAttributes = new { @class = "form-control to-date", @readonly = "true", @name = "TO_DATE", @style = "width:120px;" } })
            @Html.Hidden("hidden_TO_DATE", "")
            <input type="button" style="width: 40px;position:relative;top:0px;background-image: url(/Content/images/calendar.png);background-position: 0px 0px;background-repeat: no-repeat;background-size: 35px 30px;" class="edit-to-date-picker">
        </div>

    </div>
    <div class="form-group">
        @Html.Label("SELECT MODELS : ", htmlAttributes: new { @class = "control-label col-md-1", @style = "white-space:nowrap;" })
        <div class="col-md-10" style="display:flex;flex-wrap:nowrap">
            @*@Html.Editor("MODELNO", new { htmlAttributes = new { @class = "form-control model-id", @name = "FITEMS" } })*@
            @Html.DropDownList("FMODELS", ModelList, null, new { @class = "form-control MODEL_ID", @name = "MODEL_SELECT" })

            @Html.Hidden("hidden_MODELS", "")
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-1 col-md-10">
            <input type="button" value="REFRESH" class="btn btn-primary button refreshBtn" />
            <input type="button" value="EXPORT TO XLS" class="btn btn-primary button exportBtn" />

            
        </div>
    </div>
</div>

<style id="style_local">
    .dataTables_wrapper {
        float: left !important;
        width: 100% !important;
        margin-left: 0px !important;
    }

    table.dataTable thead tr {
        background-color: #005495;
        color: #fff;
    }

    table td {
        white-space: nowrap !important;
    }

    table.dataTable {
        margin-left: 0px !important;
        /*width: 100% !important;*/
        border: thin 0.5px grey !important;
    }

    div.dataTables_length {
        display: none !important;
    }

    div.dataTables_filter {
        display: none !important;
    }

    div.dataTables_paginate {
        display: none !important;
    }

    .modal-header {
        background-color: #005495 !important;
        color: #ffffff !important;
    }

    td.command {
        flex-flow: nowrap;
        flex-wrap: nowrap;
        white-space: nowrap !important;
    }

    th.command {
        flex-flow: nowrap;
        flex-wrap: nowrap;
        white-space: nowrap !important;
    }

    .text-center {
        text-align: center;
    }

    .no-wrap-th {
        white-space: nowrap;
    }

    .numericCol {
        text-align: right;
    }

    .textCol {
        text-align: left;
        width: 1% !important;
        white-space: nowrap;
    }

    .hiddenCol {
        display: none !important;
    }

    .boldText {
        font-weight: bold;
    }

    .boldTextRow {
        font-weight: bold;
        background-color: #cae4f3 !important;
    }

    .boldTextRowAcc {
        font-weight: bold;
        background-color: #005495 !important;
        color: #fff !important;
    }

    .boldTextRowLast td {
        font-weight: bold;
        background-color: #7cbcfa !important;
        border-bottom: 2px double #005495 !important;
        color: #fff !important;
    }

    .boldTextRowWIthoutID td {
        font-weight: bold;
        background-color: #7cbcfa !important;
        color: #fff !important;
    }

    .boldTextRowWithout td {
        font-weight: bold;
        background-color: #ffd800 !important;
        /*border-bottom:2px double #005495 !important;*/
    }

    .row_header {
        margin-top: 0px !important;
        margin-bottom: 0px !important;
    }

    .textBucle {
        text-align: left;
        white-space: pre-wrap !important;
        text-wrap: normal !important;
        border-right: 1px solid #808080 !important;
    }
    .table .fixedHeader-floating thead tr th .firstCol {
        width: 155px !important;
    }
</style>

<div class="table_dsp">
    <table class="table stripe option-list data-step">
        <thead>
            <tr style="background-color: #005495;color:#fff;border-left:1px solid white !important;">
                <th class="no-wrap-th textCol firstCol" style="border-left: 1px solid white !important;width:155px;">MODEL No.(S/B)</th>
            </tr>
        </thead>
    </table>
</div>
<div class="modal fade" id="lModalSuccess" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="loading">
                <div class="spinner"></div>
            </div>
            <div class="modal-header">
                <h4 class="header modal-title" id="lModalLabelSuccess">Success</h4>
            </div>
            <div class="modal-body">
                <h4 id="lModalBodySuccess"></h4>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <button type="button" class="w3-button w3-indigo pull-right lSuccesscloseBtn" data-dismiss="modal">Close</button>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal Successful-->

<div class="modal fade" id="lModalError" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="loading">
                <div class="spinner"></div>
            </div>
            <div class="modal-header">
                <h4 class="header modal-title" id="lModalLabelError">Error</h4>
            </div>
            <div class="modal-body">
                <h4 id="lModalBodyError"></h4>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <button type="button" class="w3-button w3-indigo pull-right lerrcloseBtn" data-dismiss="modal">Close</button>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal Error -->

<form id="frmMain" name="frmMain" class="frmMain" method="post">
    @Html.AntiForgeryToken()
    @Html.Hidden("UID", CM_APPLICATIONS.Models.AppPropModel.username)

</form>
<script>
    var tbVar;

    $('.to-date').datepicker({
        dateFormat: 'yy-M-dd',
        buttonImage: "/Content/images/calendar.png"
    });
    $('.from-date').datepicker({
        dateFormat: 'yy-M-dd',
        buttonImage: "/Content/images/calendar.png"
    });
    $('.edit-from-date-picker').click(function () {
        $('.from-date').datepicker("setDate", $('.from-date').val());
        $('.from-date').datepicker('show');
    });
    $('.edit-to-date-picker').click(function () {
        $('.to-date').datepicker("setDate", $('.to-date').val());
        $('.to-date').datepicker('show');
    });
</script>
<script>
    function setDefDate() {
        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
        var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
        $('.from-date').val($.datepicker.formatDate("yy-M-dd", firstDay));
        $('.to-date').val($.datepicker.formatDate("yy-M-dd", lastDay));
    }
    setDefDate();
</script>
<script>
    var headerRows = [];
    var ADATA = null;
    var ACCDATA = null;
    var COPNODATA = null;
    var COPQTYDATA = null;
    var COPQTYEXDATA = null;
    var allAcc = 0;
    var row_index_summary = 0;
    var COPQTY_SUMMARY1 = null;
    var COPQTY_SUMMARY2 = null;
    var COPQTY_SUGGESTION1 = null;
    var COPQTY_SUGGESTION2 = null;
    var MODEL_REM1 = null;
    var MODEL_REM2 = null;
    var xModel = "";
    var xLine = "";
    var xPos = "";
    var xDate = "";
    var xAcctt = "";
    var COP1_QTY = 0;
    var COP2_QTY = 0;

    function getTableHeader(singleRow) {
        //tbVar.rows().clear();
        var skipFirst = true;
        if (tbVar != null || tbVar != undefined) {

            $('.data-step').DataTable().destroy();
            //console.log($('.data-step'));
            $('.data-step').html("");
            $('.data-step').removeClass("dataTable");
            $('.data-step').removeClass("no-footer");
            $('.data-step').removeAttr("id");
            $('.data-step').removeAttr("aria-describedby");
            $('.data-step').removeAttr("role");
            var rowTheader = "<thead></thead>";
            $('.data-step').append(rowTheader);
            var rowTr = "<tr style='background-color: #005495;color:#fff;border-left:1px solid white !important;'></tr>";
            $('.data-step').find('thead').eq(0).append(rowTr);
            var headerString = "<th class='no-wrap-th textCol' style='border-left:1px solid white !important;'>Model No.(S/B)</th>";
            $('.data-step').find('tr').eq(0).append(headerString);
        }
        while (headerRows.length > 0) {
            headerRows.pop();
        }

        $.each(singleRow, function (ikey, ivalue) {
            if (skipFirst == false) {
                if (ikey == "FGTYPE_ID") {
                    ikey = "BUCKLE (FG_NO)";
                } else if (ikey == "FG_NO") {
                    ikey = "SEATBELT (FG_NO)";
                }else if (ikey == "POS") {
                    ikey = "POSITION";
                }else if (ikey == "LINE_ID") {
                    ikey = "LINE";
                }
                var headerString = "<th class='no-wrap-th matrixValue'  style='border-left:1px solid white !important;'>" + ikey + "</th>";
                var rowString = "<td class='no-wrap-th'>" + ikey + "</td>";
                if ('ITEM_ID_VOL' != ikey && 'HKEY' != ikey) {
                    $('.data-step').find('tr').eq(0).append(headerString);
                }

            }
            skipFirst = false;
            headerRows.push(ikey);
        });
        $('.data-step').css("padding-right","15px");
        $('html').css("overflow", "scroll");

        console.log(headerRows);

        //tbVar = null;
        //if (tbVar == null || tbVar == undefined) {
        tbVar = $('.data-step').DataTable({
            "destroy": true,
            "paging": false,
            "ordering": false,
            "info": false,
            "stripe": true,
            "fixedHeader": true,
            "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
            "language": {
                "lengthMenu": "Display _MENU_ items per page",
                "zeroRecords": "No items view",
                "info": "Showing _START_-_END_ of _TOTAL_ items",
                "infoEmpty": "No Items to view",
                "infoFiltered": "(filtered from _MAX_ total items)"
            },
            "aoColumnDefs": [
                {
                        "sClass": "numericCol", "aTargets": "_all"
                }

            ]
        });
        //}
        //console.log(headerRows);
    }
    function getMatched(strVar,MatchVar) {
        var matched = false;
        if (strVar.search(MatchVar) >= 0) {
            matched = true;
        } else {
            matched = false;
        }
        return matched;
    }
    function setBold(obj,colNum) {
         $(obj).find('td').eq(colNum).addClass("boldText");
    }
    function setBoldRow(obj) {
        $(obj).addClass("boldTextRow");
        $(obj).attr("style","background-color: #cae4f3 !important;");
    }
    function setBoldRowAcc(obj) {
        $(obj).addClass("boldTextRowAcc");
        $(obj).attr("style","background-color: #005495 !important;color: #fff !important");
    }
    function setBoldLastRow(obj) {
        $(obj).addClass("boldTextRowLast");
        $(obj).attr("style","background-color: #7cbcfa !important;color: #fff !important");
    }
    function setBoldLastRowWithout(obj) {
        $(obj).addClass("boldTextRowWithout");
        $(obj).attr("style","background-color: #ffd800 !important;font-weight: bold !important");
    }
    function setBoldLastRowWithoutID(obj) {
        $(obj).addClass("boldTextRowWIthoutID");
        $(obj).attr("style","background-color: #7cbcfa !important;color: #fff !important");
    }
    function showLogE(str,name) {
        //console.log("Show--Log-----" + name);
        console.log(str);
        //console.log("Show--Log-----END-" + name);
    }
    function showLog(str) {
        //console.log("Show--Log-----BEGIN");
        console.log(str);
        //console.log("Show--Log-----END");
    }
    function getTT(indexRow, rrValue, idx) {
        var lastIndex = 0;
        //allAcc = ACCDATA[indexRow].QTY;
        allAcc = ACCDATA[indexRow].PREV_QTY;
        $.each(ADATA[indexRow], function (i, k) {
            /*
            if (lastIndex <= 1) {
                lastIndex++;
                return;
            }
            */
            if (lastIndex >= idx) {
                var textValue = (k == null ? "0" : numberWithCommas(k));
                rrValue[idx++] = textValue;
                allAcc = (k == null ? 0 : parseInt(k)) + allAcc;
            } else {
               rrValue[lastIndex] = "";
            }
            lastIndex++;
        });
    }

    function getCOPNO(indexRow, rrValue, idx) {
        var lastIndex = 0;

        $.each(COPNODATA[indexRow], function (col_Date, keyValue) {

            if (lastIndex >= idx) {
                var xName2 = ".ROWOF_WITHOUT__" + replace(xLine) + "_" + replace(xPos) + " td._x" + col_Date;
                //console.log("xName2:", xName2);
                var COPQTY = $(xName2).text().replace(' ','');
                var textValue = (keyValue == null ? "" : keyValue);

                if (textValue == "-") {
                    var hModel = "<input type='hidden' id='xModel' name='xModel' value='" + xModel + "'>";
                    var hLine = "<input type='hidden' id='xLine' name='xLine' value='" + xLine + "'>";
                    var hPos = "<input type='hidden' id='xPos' name='xPos' value='" + xPos + "'>";
                    var hDate = "<input type='hidden' id='xDate' name='xDate' value='" + col_Date + "'>";
                    var xName = ".ROWOF_COMLT__" + replace(xLine) + "_" + replace(xPos) + " td._x" + col_Date;
                    var xAcctt = $(xName).html();
                    var hxAcctt = "<input type='hidden' id='xAcctt' name='xAcctt' value='" + xAcctt + "'>";

                    var strBtn = '<input type="button" value="Create" class="btn btn-primary button CreateCopWO">';
                    rrValue[idx++] = '<center>' + hxAcctt + hDate + hPos + hLine + hModel + strBtn + '</center>';

                } else if (COPQTY != "1" && COPQTY != "" && typeof (COPQTY) != "undefined" && COPQTY.length > 1 && keyValue != null) {

                    var hModel = "<input type='hidden' id='xModel' name='xModel' value='" + xModel + "'>";
                    var hLine = "<input type='hidden' id='xLine' name='xLine' value='" + xLine + "'>";
                    var hPos = "<input type='hidden' id='xPos' name='xPos' value='" + xPos + "'>";
                    var hDate = "<input type='hidden' id='xDate' name='xDate' value='" + col_Date + "'>";
                    var xName = ".ROWOF_COMLT__" + replace(xLine) + "_" + replace(xPos) + " td._x" + col_Date;
                    var xAcctt = $(xName).html();
                    var hxAcctt = "<input type='hidden' id='xAcctt' name='xAcctt' value='" + xAcctt + "'>";
                    var strBtn = '<input type="button" value="Create" class="btn btn-primary button CreateCopWO">';
                    var intCOPQTY = parseInt(COPQTY.replace(/[^\x20-\x7E]/g, ''));
                    var textCop = textValue.split(',');
                    var textCount = textCop.length;

                    if (textCount < intCOPQTY) {
                        if (textValue.length > 1) {
                            rrValue[idx++] = '<center>' + '\u200C' + textValue.replace(',', ',<br/>') + hxAcctt + hDate + hPos + hLine + hModel + "<br/>" + strBtn + '</center>';
                        } else {
                            rrValue[idx++] = '<center>' + hxAcctt + hDate + hPos + hLine + hModel + strBtn + '</center>';
                        }
                    } else {
                        if (textCount == intCOPQTY) {
                            if (textValue.length == 0) {


                                rrValue[idx++] = '<center>' + hxAcctt + hDate + hPos + hLine + hModel + strBtn + '</center>';
                            } else {
                                rrValue[idx++] = '<center>' + '\u200C' + textValue.replace(',', ',<br/>') + '</center>';
                            }

                        }
                    }
                }
                else {
                    rrValue[idx++] = '<center>' + '\u200C' + textValue.replace(',', ',<br/>')  + '</center>';
                }

                //allAcc = (k == null ? 0 : parseInt(k)) + allAcc;
            } else {
                rrValue[lastIndex] = "&nbsp;";
            }

            lastIndex++;
        });
    }
    function getCOPLOT(indexRow, rrValue, idx) {
        var lastIndex = 0;
        $.each(COPQTY_SUMMARY1[indexRow], function (i, k) {
            if (lastIndex >= idx) {
                var textValue =(k == null ? "" : k);
                var textSplit = [];
                var textShow = null;
                textSplit = textValue.split(',');
                if (textSplit.length > 1) {
                    $.each(textSplit, function (idx, kval) {
                        textValue = kval;
                        var textSplitV2 = textValue.split('#');

                        if (typeof (textSplitV2[1] != undefined && textSplitV2[1] != null && textSplitV2[1] != "")) {
                            var cell_name = "td._x" + i;
                            var row_name = "." + textSplitV2[1];
                            if (row_name != ".") {
                                $(row_name + " " + cell_name).attr("style", "background-color: #fed810  !important;");
                            }
                        }
                        if (textShow == null) {
                            textShow = textSplitV2[0] + ',' ;
                        } else {
                            textShow = textShow + textSplitV2[0];
                        }

                    });
                    textValue = textShow;
                } else {
                    textValue = textValue;
                    textSplitV2 = textValue.split('#');

                    if (typeof (textSplitV2[1] != undefined && textSplitV2[1] != null && textSplitV2[1] != "")) {
                        var cell_name = "td._x" + i;
                        var row_name = "." + textSplitV2[1];
                        if (row_name != ".") {
                            $(row_name + " " + cell_name).attr("style", "background-color: #fed810  !important;");
                        }

                    }
                    textValue = textSplitV2[0];
                }
                if (textValue == "-") {
                    rrValue[idx++] = '<center>'+'\u200C' +textValue +'</center>';
                } else {
                    rrValue[idx++] = '<center>' + '\u200C' + textValue.replace(',', ',<br/>') + '</center>';
                }
            } else {
                rrValue[lastIndex] = "&nbsp;";
            }

            lastIndex++;
        });
        //console.log(rrValue);
    }
    function getCOPNOEX(indexRow, rrValue, idx) {
        var lastIndex = 0;
        $.each(COPNOEXDATA[indexRow], function (i, k) {
            if (lastIndex >= idx) {
                var textValue = (k == null ? "" : k);
                var xName2 = ".ROWOF_COPWITH__" + replace(xLine) + "_" + replace(xPos) + " td._x" + i;
                //console.log("xName2:", xName2);
                var COPQTY = $(xName2).text().replace(' ', '');


                if (textValue == "-") {
                    var hModel = "<input type='hidden' id='xModel' name='xModel' value='" + xModel + "'>";
                    var hLine = "<input type='hidden' id='xLine' name='xLine' value='" + xLine + "'>";
                    var hPos = "<input type='hidden' id='xPos' name='xPos' value='" + xPos + "'>";
                    var hDate = "<input type='hidden' id='xDate' name='xDate' value='" + i + "'>";


                    //xAcctt

                    var xName = ".ROWOF_COMLT__" + replace(xLine) + "_" + replace(xPos) + " td._x" + i;
                    var xAcctt = $(xName).html();
                    var hxAcctt = "<input type='hidden' id='xAcctt' name='xAcctt' value='" + xAcctt + "'>";

                    var strBtn = '<input type="button" value="Create" class="btn btn-primary button CreateCopWC">';
                    rrValue[idx++] = '<center>' + hxAcctt + hDate + hPos + hLine + hModel + strBtn + '</center>';

                } else if (COPQTY != "1" && COPQTY != "" && typeof (COPQTY) != "undefined" && COPQTY.length > 1 && k != null) {

                    var hModel = "<input type='hidden' id='xModel' name='xModel' value='" + xModel + "'>";
                    var hLine = "<input type='hidden' id='xLine' name='xLine' value='" + xLine + "'>";
                    var hPos = "<input type='hidden' id='xPos' name='xPos' value='" + xPos + "'>";
                    var hDate = "<input type='hidden' id='xDate' name='xDate' value='" + i + "'>";


                    //xAcctt

                    var xName = ".ROWOF_COMLT__" + replace(xLine) + "_" + replace(xPos) + " td._x" + i;
                    var xAcctt = $(xName).html();
                    var hxAcctt = "<input type='hidden' id='xAcctt' name='xAcctt' value='" + xAcctt + "'>";

                    var strBtn = '<input type="button" value="Create" class="btn btn-primary button CreateCopWC">';

                    var intCOPQTY = parseInt(COPQTY.replace(/[^\x20-\x7E]/g, ''));
                    var textCop = textValue.split(',');
                    var textCount = textCop.length;


                    if (textCount < intCOPQTY) {
                        if (textValue.length > 1) {
                            rrValue[idx++] = '<center>' + '\u200C' + textValue.replace(',', ',<br/>') + hxAcctt + hDate + hPos + hLine + hModel + "<br/>" + strBtn + '</center>';
                        } else {
                            rrValue[idx++] = '<center>' + hxAcctt + hDate + hPos + hLine + hModel + strBtn + '</center>';
                        }
                    } else {
                        if (textCount == intCOPQTY) {
                            if (textValue.length == 0) {
                                rrValue[idx++] = '<center>' + hxAcctt + hDate + hPos + hLine + hModel + strBtn + '</center>';
                            } else {
                                rrValue[idx++] = '<center>' + '\u200C' + textValue.replace(',', ',<br/>') + '</center>';
                            }

                        }
                    }

                }
                else {
                    rrValue[idx++] = '<center>' + '\u200C' + textValue.replace(',',',<br/>') + '</center>'; //textValue;
                }
                //allAcc = (k == null ? 0 : parseInt(k)) + allAcc;
            } else {
                rrValue[lastIndex] = "&nbsp;";
            }

            lastIndex++;
        });
    }
    function getCOPLOT2(indexRow, rrValue, idx) {
        var lastIndex = 0;

        $.each(COPQTY_SUMMARY2[indexRow], function (i, k) {
            if (lastIndex >= idx) {
                var textValue = (k == null ? "" : k);
                var textSplit = [];
                var textShow = null;
                textSplit = textValue.split(',');
                if (textSplit.length > 0) {
                    $.each(textSplit, function (idx, kval) {
                        textValue = kval;
                        var textSplitV2 = textValue.split('#');
                        if (typeof (textSplitV2[1] != undefined && textSplit[1] != null && textSplitV2[1] != "")) {
                            var cell_name = "td._x" + i;
                            var row_name = "." + textSplitV2[1];
                            if (row_name != ".") {
                                //console.log(row_name);
                                $(row_name + " " + cell_name).attr("style", "background-color: #fed810  !important;");
                                //TextClass.attr("style","backgrond-color: blue !important;");
                                //console.log("X-Test", row_name + cell_name, $(row_name + " " + cell_name));
                            }
                        }
                        if (textShow == null) {
                            textShow = textSplitV2[0];
                        } else {
                            textShow = textShow + textSplitV2[0];
                        }
                        textValue = textShow;
                    });
                } else {
                    textValue = textValue;
                    var textSplitV2 = textValue.split('#');

                    if (typeof (textSplitV2[1] != undefined && textSplitV2[1] != null && textSplitV2[1] != "")) {
                        var cell_name = "td._x" + i;
                        var row_name = "." + textSplitV2[1];
                        if (row_name != ".") {
                            $(row_name + " " + cell_name).attr("style", "background-color: #fed810  !important;");
                        }

                    }
                    textValue = textSplitV2[0];
                }
                if (textValue == "-") {
                    rrValue[idx++] = '<center>' + '\u200C' + textValue+ '</center>';
                } else {
                    rrValue[idx++] = '<center>' + '\u200C' + textValue.replace(' ', ',<br/>') + '</center>';
                }

                //allAcc = (k == null ? 0 : parseInt(k)) + allAcc;
            } else {
                rrValue[lastIndex] = "&nbsp;";
            }

            lastIndex++;
        });
        //console.log(rrValue);
    }
    function getCOPQTY(indexRow, triggerValue, accValue) {
        var lastIndex = 0;
        COP1_QTY = 0;
        var valueReturn = 0;
        var dataInt = 0;
        var accLocal = accValue;
        valueReturn = accValue;
        $.each(COPQTYDATA[indexRow], function (i, k) {
            if ($.isNumeric(k)) {
                dataInt = parseInt(k) * triggerValue;

                if ((accLocal - dataInt) > 0) {
                    accLocal = accLocal - dataInt;
                    if (accLocal < triggerValue) {
                        valueReturn = accLocal;
                        return false;
                    }
                }
                lastIndex = parseInt(k) + parseInt(lastIndex);
            }

        });

        COP1_QTY = lastIndex;
        //console.log("valueReturn : " + valueReturn + ",accValue = " + accValue);
        return valueReturn;
    }
    function getCOPQTY1(indexRow) {
        var lastIndex = 0;
        $.each(COPQTYDATA[indexRow], function (i, k) {
            if ($.isNumeric(k)) {
                lastIndex = parseInt(k) + parseInt(lastIndex);
            }
        });
        return lastIndex;
    }
    function getCOPQTY2(indexRow) {
        var lastIndex = 0;
        $.each(COPQTYEXDATA[indexRow], function (i, k) {
            if ($.isNumeric(k)) {
                lastIndex = parseInt(k) + parseInt(lastIndex);
            }
        });
        return lastIndex;
    }
    function getCOPQTYEX(indexRow, triggerValue, accValue) {
        var lastIndex = 0;
        COP2_QTY = 0;
        var valueReturn = 0;
        var dataInt = 0;
        var accLocal = accValue;
        valueReturn = accValue;
        $.each(COPQTYEXDATA[indexRow], function (i, k) {
            if ($.isNumeric(k)) {
                dataInt = parseInt(k) * triggerValue;
                //console.log("dataInt : " + dataInt);
                if ((accLocal - dataInt) > 0) {
                    accLocal = accLocal - dataInt;
                    if (accLocal < triggerValue) {
                        valueReturn = accLocal;
                        return false;
                    }
                }
                lastIndex++;
            }

        });
        COP2_QTY = lastIndex;
        //console.log("valueReturn : " + valueReturn + ",accValue = " + accValue);
        return valueReturn;
    }
    function getACCTT(indexRow, rrValue, idx) {
        var lastIndex = 0;
        var deptQty = MODEL_REM1[indexRow].VT_ACQTY;
        $.each(ADATA[indexRow], function (i, k) {
            if (lastIndex >= idx) {
                var value = numberWithCommas((deptQty + (k == null ? 0 : parseInt(k))));
                rrValue[(idx++)] = value;

                deptQty = (deptQty + (k == null ? 0 : parseInt(k)));
            } else {
                rrValue[(lastIndex)] = "";
            }
            lastIndex++;
        });
    }
    function getTrigger(intVale, triggerValue) {
        var t = intVale / triggerValue;
        //showLogE(t,"getTrigger.t");
        if (t > 1) {
            return t;
        } else {
            return 0;
        }
    }
    function genBtn(strCaption,model,line,dateShow) {
        var btnStr = "<input type='hidden' id='xDATE' name='xDATE' value='"+ dateShow +"'><input type='hidden' id='xMODEL' name='xMODEL' value='"+ model +"'><input type='hidden' id='xLINE' name='xLINE' value='"+ line +"'><A class='btn btn-info button CreateCOP' >" + strCaption + "'</A>";
        return btnStr;
    }
    function genBtn2(strCaption,model,line,dateShow) {
        var btnStr = "<input type='hidden' id='xDATE' name='xDATE' value='"+ dateShow +"'><input type='hidden' id='xMODEL' name='xMODEL' value='"+ model +"'><input type='hidden' id='xLINE' name='xLINE' value='"+ line +"'><A class='btn btn-primary button CreateCOP2' >" + strCaption + "'</A>";
        return btnStr;
    }
    function get5000_EX(indexRow, rrValue, idx,model,line,pos) {
        var lastIndex = 0;
        var lastIndex = 0;
        var deptQty = 0;//ACCDATA[indexRow].PREV_QTY;

        $.each(COPQTYDATA[indexRow], function (i, k) {
            if (lastIndex >= idx) {
                var value = numberWithCommas((k == null ? "" : parseInt(k)));
                rrValue[(idx++)] = '<center>' + '\u200C' + value + '</center>';
            } else {
                rrValue[(lastIndex)] = "";
            }
            lastIndex++;
        });
    }
    function get10000(indexRow, rrValue, idx, model, line) {
         var lastIndex = 0;

         $.each(COPQTYEXDATA[indexRow], function (i, k) {
             if (lastIndex >= idx) {
                 var value = numberWithCommas((k == null ? "" : parseInt(k)));
                 rrValue[(idx++)] = '<center>' + '\u200C' + value + '</center>';
             } else {
                 rrValue[(lastIndex)] = "";
             }
             lastIndex++;
         });
    }
    function getDateValuePack(colIndex) {
        if (headerRows) {
            var newIndex = parseInt(colIndex) + 2;
            var dateStr = headerRows[newIndex];
            return (dateStr);
        } else {
            return null;
        }
    }
    function getTableRows(rowsData, rowADATA, rowACCDATA, rowCOPNO, rowCOPQTY, rowCOPQTYEX, rowCOPNOEX, rowCOPSUM1,rowCOPSUM2,rowCOPPrev) {
        xModel = "";
        xLine = "";
        xPos = "";
        xDate = "";
        xAcctt = "";

        var skipFirst = true;
        var modelID = "";
        var lineID = "";
        var posID = "";
        var sumTT = [];
        var posTT = [];
        var AccTT = [];
        var Front = true;
        var lastPos = null;
        var hasPrint = false;
        var Sampling1 = [];
        var Sampling2 = [];
        var CopProc1 = [];
        var CopProc2 = [];

        var CopLot1 = [];

        var CopLot2 = [];

        var CopRem1 = [];

        var printTT = 0;
        var lIdx = 0;
        ADATA = rowADATA;
        ACCDATA = rowACCDATA;
        COPNODATA = rowCOPNO;
        COPNOEXDATA = rowCOPNOEX;
        COPQTYDATA = rowCOPQTY;
        COPQTYEXDATA = rowCOPQTYEX;
        COPQTY_SUMMARY1 = rowCOPSUM1;
        COPQTY_SUMMARY2 = rowCOPSUM2;
        MODEL_REM1 = rowCOPPrev;
        console.log("COPQTY_SUMMARY1", COPQTY_SUMMARY1);
        /*
         *     var ADATA = null;
    var ACCDATA = null;
    var COPNODATA = null;
    var COPQTYDATA = null;
    var COPQTYEXDATA = null;
    var allAcc = 0;
    var row_index_summary = 0;
    var COPQTY_SUMMARY1 = null;
    var COPQTY_SUMMARY2 = null;
    var COPQTY_SUGGESTION1 = null;
    var COPQTY_SUGGESTION2 = null;
    var MODEL_REM1 = null;
    var MODEL_REM2 = null;
    */
        $.each(rowsData, function (key, value) {

            var rowData = [];
            var i = 0;
            $.each(value, function (ikey, ivalue) {
                if (i > 5) {
                    rowData.push(ivalue == null ? "0" : numberWithCommas(ivalue) );
                } else {
                    rowData.push(ivalue == null ? "" : ivalue);
                }
                i++;
            });
            xModel = rowData[0];
            if (xLine == "" ) xLine = rowData[1];
            if (xPos == "") xPos = rowData[3];

            if (rowData[1] != lineID) {
                lineID = rowData[1];
                posID = rowData[3];
                if (lIdx > 0) {
                    getTT(printTT++, posTT, 6);
                    posTT[5] = "Total: ";
                    var rowNode = tbVar.row.add(posTT).draw(false).node();
                    setBoldRow(rowNode);
                    $(rowNode).addClass('ROWOF_TOTAL_' + modelID + "_" + replace(xLine) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);

                    getACCTT(printTT - 1, AccTT, 6);
                    //console.log(AccTT);
                    AccTT[5] = "Accumulative Total: ";
                    var rowNode = tbVar.row.add(AccTT).draw(false).node();
                    setBoldRowAcc(rowNode);
                    $(rowNode).addClass('ROWOF_COMLT_' + replace(modelID) + "_" + replace(xLine) + "_" + xPos);
                    addHintsWithClass(xModel, xLine, xPos, rowNode);

                    get5000_EX(printTT - 1, Sampling1, 6, modelID, lineID, lastPos);
                    Sampling1[5] = "Calculate sample require for (1/5000):";
                    var rowNode = tbVar.row.add(Sampling1).draw(false).node();
                    setBoldLastRowWithout(rowNode);
                    $(rowNode).addClass('ROWOF_WITHOUT_' + modelID + "_" + replace(xLine) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);
                    $.each(headerRows, function (i, k) {
                        $(rowNode).find('td').eq(i).addClass("_x" + k);
                        //$(rowNode).find('td').eq(i).attr('title', text);
                    });

                    getCOPNO(printTT - 1, CopProc1, 6);
                    CopProc1[5] = "01-Without :";
                    var rowNode = tbVar.row.add(CopProc1).draw(false).node();
                    setBoldLastRowWithoutID(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITHOUT_' + modelID + "_" + replace(xLine) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);

                    getCOPLOT(printTT - 1, CopLot1, 6);
                    CopLot1[5] = "";
                    var rowNode = tbVar.row.add(CopLot1).draw(false).node();
                    setBoldLastRowWithoutID(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITHOUT_' + modelID + "_" + replace(xLine) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);

                    get10000(printTT - 1, Sampling2, 5, modelID, lineID);
                    Sampling2[5] = "Calculate sample require for (1/10000):";
                    var rowNode = tbVar.row.add(Sampling2).draw(false).node();
                    setBoldLastRowWithout(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITH_' + modelID + "_" + replace(xLine) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);
                    $.each(headerRows, function (i, k) {
                        $(rowNode).find('td').eq(i).addClass("_x" + k);
                        //$(rowNode).find('td').eq(i).attr('title', text);
                    });

                    getCOPNOEX(printTT - 1, CopProc2, 6);
                    CopProc2[5] = "02-With Con :";
                    var rowNode = tbVar.row.add(CopProc2).draw(false).node();
                    setBoldLastRow(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITH_' + modelID + "_" + replace(xLine) + "_" + xPos);
                    $(rowNode).addClass('LINE-2-ROWOF_COPWITH_' + modelID + "_" + replace(xLine) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);

                    getCOPLOT2(printTT - 1, CopLot2, 6);
                    CopLot2[5] = "";
                    var rowNode = tbVar.row.add(CopLot2).draw(false).node();
                    setBoldLastRowWithoutID(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITHOUT_' + modelID + "_" + replace(xLine) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);

                    xLine = rowData[1];
                    xPos = rowData[3];
                }
            } else {
                //rowData[0] = "";
                //rowData[1] = "";

                if (rowData[3] != posID) {
                    posID = rowData[3];
                    //xModel = rowData[0];
                    //xLine = rowData[1];

                    //console.log("lIdx -x", lIdx);
                    //console.log("lIdx-y", lIdx);
                    getTT(printTT++, posTT, 6);
                    posTT[5] = "Total: ";
                    var rowNode = tbVar.row.add(posTT).draw(false).node();
                    setBoldRow(rowNode);
                    $(rowNode).addClass('ROWOF_TOTAL_' + modelID + "_" + replace(lineID) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);

                    getACCTT(printTT - 1, AccTT, 6);
                    //console.log(AccTT);
                    AccTT[5] = "Accumulative Total: ";
                    var rowNode = tbVar.row.add(AccTT).draw(false).node();
                    setBoldRowAcc(rowNode);
                    $(rowNode).addClass('ROWOF_COMLT_' + replace(modelID) + "_" + replace(lineID) + "_" + xPos);
                    addHintsWithClass(xModel, xLine, xPos, rowNode);

                    get5000_EX(printTT - 1, Sampling1, 6, modelID, lineID, lastPos);
                    Sampling1[5] = "Calculate sample require for (1/5000):";
                    var rowNode = tbVar.row.add(Sampling1).draw(false).node();
                    setBoldLastRowWithout(rowNode);
                    $(rowNode).addClass('ROWOF_WITHOUT_' + modelID + "_" + replace(lineID) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);
                    $.each(headerRows, function (i, k) {
                        $(rowNode).find('td').eq(i).addClass("_x" + k);
                        //$(rowNode).find('td').eq(i).attr('title', text);
                    });

                    getCOPNO(printTT - 1, CopProc1, 6);
                    CopProc1[5] = "01-Without :";
                    var rowNode = tbVar.row.add(CopProc1).draw(false).node();
                    setBoldLastRowWithoutID(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITHOUT_' + modelID + "_" + replace(lineID) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);

                    getCOPLOT(printTT - 1, CopLot1, 6);
                    CopLot1[5] = "";
                    var rowNode = tbVar.row.add(CopLot1).draw(false).node();
                    setBoldLastRowWithoutID(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITHOUT_' + modelID + "_" + replace(lineID) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);

                    get10000(printTT - 1, Sampling2, 5, modelID, lineID);
                    Sampling2[5] = "Calculate sample require for (1/10000):";
                    var rowNode = tbVar.row.add(Sampling2).draw(false).node();
                    setBoldLastRowWithout(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITH_' + modelID + "_" + replace(lineID) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);
                    $.each(headerRows, function (i, k) {
                        $(rowNode).find('td').eq(i).addClass("_x" + k);
                        //$(rowNode).find('td').eq(i).attr('title', text);
                    });

                    getCOPNOEX(printTT - 1, CopProc2, 6);
                    CopProc2[5] = "02-With Con :";
                    var rowNode = tbVar.row.add(CopProc2).draw(false).node();
                    setBoldLastRow(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITH_' + modelID + "_" + replace(lineID) + "_" + xPos);
                    $(rowNode).addClass('POS-3-ROWOF_COPWITH_' + modelID + "_" + replace(lineID) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);

                    getCOPLOT2(printTT - 1, CopLot2, 6);
                    CopLot2[5] = "";
                    var rowNode = tbVar.row.add(CopLot2).draw(false).node();
                    setBoldLastRowWithoutID(rowNode);
                    $(rowNode).addClass('ROWOF_COPWITH_' + modelID + "_" + replace(lineID) + "_" + xPos);
                    addHintsWithoutClass(xModel, xLine, xPos, rowNode);
                    xPos = rowData[3];
                } else {
                    rowData[0] = "";
                    rowData[1] = "";
                }

            }
            /*
            if (rowData[3] != posID) {
                posID = rowData[3];
            } else {
                rowData[0] = "";
                rowData[1] = "";
            }
            */
            //console.log(rowData);

            var rowNode = tbVar.row.add(rowData).draw(false).node();
            $(rowNode).addClass(rowData[4]);
            $.each(headerRows, function (i,k) {
                //console.log()
                var text = 'DATE: ' + k + '\n';
                text = text + 'MODEL: ' + xModel + '\n';
                text = text + 'LINE: ' + xLine + "\n";
                text = text + 'POSITION: ' + rowData[2] + "\n";
                text = text + 'PARTNO: ' + rowData[4] + "\n";

                $(rowNode).find('td').eq(i).addClass("_x" + k);
                $(rowNode).find('td').eq(i).attr('title', text );
            });
            $(rowNode).find('td').eq(0).removeClass("numericCol");
            $(rowNode).find('td').eq(0).addClass("textCol");
            $(rowNode).find('td').eq(0).attr("style", "text-align: center !important;");

            $(rowNode).find('td').eq(1).removeClass("numericCol");
            $(rowNode).find('td').eq(1).addClass("textCol");

            $(rowNode).find('td').eq(2).removeClass("numericCol");
            $(rowNode).find('td').eq(2).addClass("textCol");

            $(rowNode).find('td').eq(3).removeClass("numericCol");
            $(rowNode).find('td').eq(3).addClass("textCol");

            $(rowNode).find('td').eq(4).removeClass("numericCol");
            $(rowNode).find('td').eq(4).addClass("textCol");
            $(rowNode).find('td').eq(4).attr("style", "text-align: left !important;");

            $(rowNode).find('td').eq(5).removeClass("numericCol");
            $(rowNode).find('td').eq(5).addClass("textCol");
            $(rowNode).find('td').eq(5).addClass("textBucle");
            $(rowNode).find('td').eq(5).attr("style","text-align: left !important;");
            //    text-align: left !important;

            skipFirst = false;
            lIdx++;

        });

        //** LAST ROW*/
        //console.log("Last-Row, lIdx");
        getTT(printTT++, posTT, 6);

        posTT[5] = "Total: ";
        var rowNode = tbVar.row.add(posTT).draw(false).node();
        setBoldRow(rowNode);
        $(rowNode).addClass('ROWOF_TOTAL_' + modelID + "_" + replace(lineID) + "_" + xPos);
        addHintsWithoutClass(xModel, xLine, xPos, rowNode);

        getACCTT(printTT - 1, AccTT, 6);
       // console.log(AccTT);
        AccTT[5] = "Accumulative Total: ";
        var rowNode = tbVar.row.add(AccTT).draw(false).node();
        setBoldRowAcc(rowNode);
        $(rowNode).addClass('ROWOF_COMLT_' + replace(modelID) + "_" + replace(lineID) + "_" + xPos);
        addHintsWithClass(xModel, xLine, xPos, rowNode);

        get5000_EX(printTT - 1, Sampling1, 6, modelID, lineID, lastPos);
        Sampling1[5] = "Calculate sample require for (1/5000):";
        var rowNode = tbVar.row.add(Sampling1).draw(false).node();
        setBoldLastRowWithout(rowNode);
        $(rowNode).addClass('ROWOF_WITHOUT_' + modelID + "_" + replace(lineID) + "_" + xPos);
        addHintsWithoutClass(xModel, xLine, xPos, rowNode);
        $.each(headerRows, function (i, k) {
            $(rowNode).find('td').eq(i).addClass("_x" + k);
            //$(rowNode).find('td').eq(i).attr('title', text);
        });

        getCOPNO(printTT - 1, CopProc1, 6);
        CopProc1[5] = "01-Without :";
        var rowNode = tbVar.row.add(CopProc1).draw(false).node();
        setBoldLastRowWithoutID(rowNode);
        $(rowNode).addClass('ROWOF_COPWITHOUT_' + modelID + "_" + replace(lineID) + "_" + xPos);
        addHintsWithoutClass(xModel, xLine, xPos, rowNode);


        getCOPLOT(printTT - 1, CopLot1, 6);
        CopLot1[5] = "";
        var rowNode = tbVar.row.add(CopLot1).draw(false).node();
        setBoldLastRowWithoutID(rowNode);
        $(rowNode).addClass('ROWOF_COPWITHOUT_' + modelID + "_" + replace(lineID) + "_" + xPos);
        addHintsWithoutClass(xModel, xLine, xPos, rowNode);


        get10000(printTT - 1, Sampling2, 5, modelID, lineID);
        Sampling2[5] = "Calculate sample require for (1/10000):";
        var rowNode = tbVar.row.add(Sampling2).draw(false).node();
        setBoldLastRowWithout(rowNode);
        $(rowNode).addClass('ROWOF_COPWITH_' + modelID + "_" + replace(lineID) + "_" + xPos);
        addHintsWithoutClass(xModel, xLine, xPos, rowNode);
        $.each(headerRows, function (i, k) {
            $(rowNode).find('td').eq(i).addClass("_x" + k);
            //$(rowNode).find('td').eq(i).attr('title', text);
        });

        getCOPNOEX(printTT - 1, CopProc2, 6);
        CopProc2[5] = "02-With Con :";
        var rowNode = tbVar.row.add(CopProc2).draw(false).node();
        setBoldLastRow(rowNode);
        $(rowNode).addClass('ROWOF_COPWITH_' + modelID + "_" + replace(lineID) + "_" + xPos);
        $(rowNode).addClass('LAST-ROWOF_COPWITH_' + modelID + "_" + replace(lineID) + "_" + xPos);
        addHintsWithoutClass(xModel, xLine, xPos, rowNode);

        getCOPLOT2(printTT - 1, CopLot2, 6);
        CopLot2[5] = "";
        var rowNode = tbVar.row.add(CopLot2).draw(false).node();
        setBoldLastRowWithoutID(rowNode);
        $(rowNode).addClass('ROWOF_COPWITHOUT_' + modelID + "_" + replace(lineID) + "_" + xPos);
        /*
        $.each(headerRows, function (i, k) {
            //console.log()
            var text = 'DATE: ' + k + '\n';
            text = text + 'MODEL: ' + xModel + '\n';
            text = text + 'LINE: ' + xLine + "\n";
            text = text + 'POSITION: ' + xPos + "\n";

            $(rowNode).find('td').eq(i).attr("title", text);
            //$(rowNode).find('td').eq(i).addClass("_x" + k);
        });
        */
        addHintsWithoutClass(xModel, xLine, xPos, rowNode);

        if (sumTT.Count > 0) {
            sumTT.splice(5, 1);
            var rowNode = tbVar.row.add(sumTT).draw(false).node();
            sumTT = [];
        }
    }
    function addHintsWithoutClass(lxModel,lxLine,lxPos,rowNode) {
        $.each(headerRows, function (i, k) {
            //console.log()
            var text = 'DATE: ' + k + '\n';
            text = text + 'MODEL: ' + lxModel + '\n';
            text = text + 'LINE: ' + lxLine + "\n";
            text = text + 'POSITION: ' + lxPos + "\n";

            $(rowNode).find('td').eq(i).attr("title", text);
            //$(rowNode).find('td').eq(i).addClass("_x" + k);
        });
    }
    function addHintsWithClass(lxModel, lxLine, lxPos, rowNode) {
        $.each(headerRows, function (i, k) {
            //console.log()
            var text = 'DATE: ' + k + '\n';
            text = text + 'MODEL: ' + lxModel + '\n';
            text = text + 'LINE: ' + lxLine + "\n";
            text = text + 'POSITION: ' + lxPos + "\n";

            $(rowNode).find('td').eq(i).attr("title", text);
            $(rowNode).find('td').eq(i).addClass("_x" + k);
        });
    }
    function digits(text) {
        return this.each(function () {
            text(text().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
        })
    }
    function replace(StrVar) {
        StrVar = StrVar.replace(".", "_")
        return StrVar.replace(" ","_");
    }
    function refreshData() {
        var fromDate = $('.from-date').val();
        var toDate = $('.to-date').val();
        var itemID = $('.item-id').val();
        var modelID = $('.MODEL_ID').val();

        //fromDate = '2021-01-01';
        //toDate = '2021-01-31';
        //modelID = 'RG01';
        var urlText = "@Url.Action("GetVolTrackingByModel","COPR16_ITEMS_MSTR")";
        var options = { "backdrop": "static", keyboard: true };
        var jdata = {
            "FROM_DATE": fromDate,
            "TO_DATE": toDate,
            "ITEM_ID": itemID,
            "MODEL_ID":modelID
        };
        console.log(jdata);
        //console.log(".---.");
        autoCloseCompleted = false;

        if (typeof (tbVar) != "undefined" && tbVar != null) {

            tbVar.rows().clear();
        }
        $.ajax({
            type: "POST",
            url: urlText,     //your action
            //data: $('form').serialize(),   //your form name.it takes all the values of model
            //dataType: 'json',
            data: jdata,
            success: function (result) {
                row_index_summary = 0;
                console.log(result);
                getTableHeader(result.Data.QTY[0]);
                getTableRows(result.Data.QTY,
                    result.Data.AQTY,
                    result.Data.ACCQTY,
                    result.Data.COPNO,
                    result.Data.COPQTY_SUGGESTION1,
                    result.Data.COPQTY_SUGGESTION2,
                    result.Data.COPNOEX,
                    result.Data.COPQTY_SUMMARY1,
                    result.Data.COPQTY_SUMMARY2,
                    result.Data.MODEL_REM1
                );
                /*
                getTableHeader(result.Data.QTY[0]);
                //console.log(result.Data.COPQTY);
                COPQTY_SUMMARY1 = result.Data.COPQTY_SUMMARY1;
                COPQTY_SUMMARY2 = result.Data.COPQTY_SUMMARY2;
                COPQTY_SUGGESTION1 = result.Data.COPQTY_SUGGESTION1;
                COPQTY_SUGGESTION2 = result.Data.COPQTY_SUGGESTION2;
                MODEL_REM1 = result.Data.MODEL_REM1;
                MODEL_REM2 = result.Data.MODEL_REM2;
                getTableRows(result.Data.QTY, result.Data.AQTY, result.Data.ACCQTY, result.Data.COPNO, result.Data.COPQTY, result.Data.COPQTYEX, result.Data.COPNOEX);
                update_suggestion();
                */
                /*
                getTableHeader(result.Data[0]);
                getTableRows(result.Data);
                */

                //$.each(result.Data, function (key, value) {
                //    $.each(value, function (ikey,ivalue) {
                //        console.log(ikey);
                //    });
                //});
                closeConpleting();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
                //$('#lModalBodyError').html("error:" + errorThrown);
                $('#lModalBodyError').html(jqXHR.responseText);
                $('#lModalError').modal("show");
                closeConpleting();
            }
        });
    }
    function update_suggestion() {
        var suggestion_qty1 = $('.suggestion_qty');
        var suggestion_qty2 = $('.suggestion_qty2');
        //console.log(suggestion_qty1);
        $.each(suggestion_qty1, function (i,k) {
            $(k).html("<DIV class='row_header suggestion_qty' >[ " + COPQTY_SUMMARY1[i].COPQTY_SUGGESTION + " ] Calculate sample require for (1/5000): </div>");
            var cop_suggestion = COPQTY_SUGGESTION1.filter(function (obj) {
                return obj.MODLE_ID == COPQTY_SUMMARY1[i].MODLE_ID
                    && obj.LINE_ID == COPQTY_SUMMARY1[i].LINE_ID
                    && obj.POS == COPQTY_SUMMARY1[i].POS;
            });
            var COPNO_FT = COPNODATA.filter(function (obj) {
                return obj.ITEM_ID == COPQTY_SUMMARY1[i].MODLE_ID + "_" + COPQTY_SUMMARY1[i].LINE_ID + "_" + COPQTY_SUMMARY1[i].POS
            });
            //console.log(COPNO_FT);
            var index = 0;

            $.each(cop_suggestion, function (idx, keyvalue) {
                var pos = getMatched(keyvalue.POS, "Fron");
                var className = '.ROWOF_WITHOUT_' + keyvalue.MODLE_ID + "_" + replace(keyvalue.LINE_ID) + "_" + pos;
                var className2 = '.ROWOF_COPWITHOUT_' + keyvalue.MODLE_ID + "_" + replace(keyvalue.LINE_ID) + "_" + pos;

                if (keyvalue.COP_FLAG == "1") {
                    var row_cop = $(className).find('td').eq(idx + 5);
                    var row_open_cop = $(className2).find('td').eq(idx + 5);
                    //if(COPNO_FT[idx].)
                    if ($(row_open_cop).html() == "") {
                        var btn = genBtn("Create COP(" + keyvalue.COP_QTY + ")", keyvalue.MODLE_ID, keyvalue.LINE_ID, idx + 5);
                        $(row_cop).append(btn);
                    } else {
                        $(row_cop).html(keyvalue.COP_QTY);
                    }
                }

            });

        });
        $.each(suggestion_qty2, function (i,k) {
            //console.log(i, k);
            $(k).html("<DIV class='row_header suggestion_qty2' >[ " + COPQTY_SUMMARY2[i].COPQTY_SUGGESTION + " ] Calculate sample require for (1/10000): </div>");
            var cop_suggestion2 = COPQTY_SUGGESTION2.filter(function (obj) {
                return obj.MODLE_ID == COPQTY_SUMMARY2[i].MODLE_ID
                    && obj.LINE_ID == COPQTY_SUMMARY2[i].LINE_ID
                    && obj.POS == COPQTY_SUMMARY2[i].POS;
            });
            var index = 0;
            $.each(cop_suggestion2, function (idx, keyvalue) {
                var pos = getMatched(keyvalue.POS, "Fron");
                var className = '.ROWOF_WITH_' + keyvalue.MODLE_ID + "_" + replace(keyvalue.LINE_ID) + "_" + pos;
                var className2 = '.ROWOF_COPWITH_' + keyvalue.MODLE_ID + "_" + replace(keyvalue.LINE_ID) + "_" + pos;

                if (keyvalue.COP_FLAG == "1") {
                    var row_cop = $(className).find('td').eq(idx + 5);
                    var row_open_cop = $(className2).find('td').eq(idx + 5);

                    if ($(row_open_cop).html() == "") {
                        var btn = genBtn2("Create COP(" + keyvalue.COP_QTY + ")", keyvalue.MODLE_ID, keyvalue.LINE_ID, idx + 5);
                        $(row_cop).append(btn);
                    } else {
                         $(row_cop).html(keyvalue.COP_QTY);
                    }
                }

            });

        });
        $('.dataTables_info').attr("style", "display:none !important");
        /*
        console.log(COPQTY_SUGGESTION1.filter(function (obj) {
            return obj.MODLE_ID == "341B"
                && obj.LINE_ID == "R200 DLC-1"
                && obj.POS == "Rear";
        }));
        */
    }
    $('.refreshBtn').click(function () {
        refreshData();
    });
    $("body").on("click", ".CreateCopWO", function (ev) {
        var p = $(this).parent();
        var model = $(p).find("#xModel").val();
        var line = $(p).find("#xLine").val();
        var pos = $(p).find("#xPos").val();
        var accQty = $(p).find("#xAcctt").val();
        var URLSTR = "@Url.Action("CreateMacro","COPR16_COPRUNNING")";
        var modelHtml = "<input type='hidden' name='xModel' id='xModel' value='" + model + "'>";
        var lineHtml = "<input type='hidden' name='xLine' id='xLine' value='" + line + "'>";
        var posHtml = "<input type='hidden' name='xPos' id='xPos' value='" + pos + "'>";
        var coptypeHtml = "<input type='hidden' name='WRK_ID' id='WRK_ID' value='COP-ATH-01'>";
        var indexDate = $(p).find("#xDate").val();
        var procIDHtml = "<input type='hidden' name='PROC_ID' id='PROC_ID' value='01'>";
        var xAccttHtml = "<input type='hidden' name='xACCTT' id='xACCTT' value='Accumulative Total: " + accQty+"'>";
        var btnDateHtml = "<input type='hidden' name='btnDate' id='btnDate' value='" + indexDate+"'>";

        var xName = ".ROWOF_COMLT__" + line.replace('.','_') + "_" + pos + " td._x" + indexDate;
        var qty = $(xName).html();
        //showLogE(URLSTR, "URLSTR");
        $("#frmMain").attr("action", URLSTR);
        $("#frmMain").append(modelHtml);
        $("#frmMain").append(lineHtml);
        $("#frmMain").append(posHtml);
        $("#frmMain").append(coptypeHtml);
        $("#frmMain").append(btnDateHtml);
        $("#frmMain").append(procIDHtml);
        $("#frmMain").append(xAccttHtml);
        //$(".644194000 td._x03-Feb-2021").attr("style","background-color:black !important;");
        console.log($("#frmMain"));

        console.log("xName", xName);
        console.log("xName Object:", $(".ROWOF_COMLT__" + line.replace('.', '_')  + "_" + pos));
        console.log("qty", qty);
        $("#frmMain").submit();

        //window.location.href = URLSTR;
    });
    $("body").on("click", ".CreateCopWC", function (ev) {
        var p = $(this).parent();
        var p = $(this).parent();
        var model = $(p).find("#xModel").val();
        var line = $(p).find("#xLine").val();
        var pos = $(p).find("#xPos").val();
        var accQty = $(p).find("#xAcctt").val();

        var URLSTR = "@Url.Action("CreateMacro","COPR16_COPRUNNING")";
        var modelHtml = "<input type='hidden' name='xModel' id='xModel' value='" + model + "'>";
        var lineHtml = "<input type='hidden' name='xLine' id='xLine' value='" + line + "'>";
        var posHtml = "<input type='hidden' name='xPos' id='xPos' value='" + pos + "'>";
        var coptypeHtml = "<input type='hidden' name='WRK_ID' id='WRK_ID' value='COP-ATH-02'>";
        var procIDHtml = "<input type='hidden' name='PROC_ID' id='PROC_ID' value='02'>";
        var xAccttHtml = "<input type='hidden' name='xACCTT' id='xACCTT' value='Accumulative Total: " + accQty + "'>";
        var indexDate = $(p).find("#xDate").val();


        var btnDateHtml = "<input type='hidden' name='btnDate' id='btnDate' value='" + indexDate + "'>";

        showLogE(URLSTR, "URLSTR");
        $("#frmMain").attr("action", URLSTR);
        $("#frmMain").append(modelHtml);
        $("#frmMain").append(lineHtml);
        $("#frmMain").append(posHtml);
        $("#frmMain").append(coptypeHtml);
        $("#frmMain").append(btnDateHtml);
        $("#frmMain").append(procIDHtml);
        $("#frmMain").append(xAccttHtml);
        console.log($("#frmMain"));

        $("#frmMain").submit();


    });
    $('.exportBtn').click(function () {
        exportToExcel();
    });
    function exportToExcel() {
        var style_sheet = $('#style_local').html();
        var htmls = "";
        var uri = 'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8;base64,';
        var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><style>{stylesheet}</style></head><body><table>{table}</table></body></html>';
        var base64 = function(s) {
            return window.btoa(unescape(encodeURIComponent(s)))
        };

        var format = function(s, c) {
            return s.replace(/{(\w+)}/g, function(m, p) {
                return c[p];
            })
        };
        //console.log(style_sheet);
        $('.dataTables_filter').remove();
        htmls = $('.dataTables_wrapper').html().replace(/Create\ COP\(/g, '');
        htmls = htmls.replace(/\)\'/g, '');
        htmls = htmls.replace(/\[+ (?:(?!\d+ \d+ obj)[\s\S])*?[\s\S]*?\]/g, '');

        //console.log(htmls);
        var ctx = {
                worksheet: "COPR16_REPORT_" + $('#FMODELS').val(),
                stylesheet: style_sheet,
                table: htmls

            }
        var link = document.createElement("a");
        link.download = "COPR16_REPORT_" +  $('#FMODELS').val() + ".xls";
        link.href = uri + base64(format(template, ctx));
        link.click();
    }
    function RefreshModel() {
        var ModelSet = "@ViewBag.ModelSet";
        console.log("ModelSet",ModelSet);
        if (ModelSet != "") {
            $('.MODEL_ID option[value=' + ModelSet + ']').attr('selected', 'selected');
            refreshData();
        }
    }
    RefreshModel();

</script>