@model CM_APPLICATIONS.Models.CopRunningModel

@{
    ViewBag.Title = "COP RUNNING DASHBOARD";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var row = 0;
}

<h2>COP R16 OVERVIEW DASHBOARD</h2>

<style>
    .dataTables_wrapper {
        float: left !important;
        width: 99% !important;
        margin-left: 0px !important;
    }

    table.dataTable thead tr {
        background-color: #005495;
        color: #fff;
    }

    table.dataTable {
        margin-left: 0px !important;
        width: 100% !important;
    }
    .rightText{
        text-align:right;
        padding-right:5px;
    }
</style>
<style>
    .dataTables_wrapper {
        float: left !important;
        width: 99% !important;
        margin-left: 0px !important;
    }

    table.dataTable thead tr {
        background-color: #005495;
        color: #fff;
    }

    table.dataTable {
        margin-left: 0px !important;
        width: 100% !important;
    }

    table.dashbord {
        width: 100%;
        border: 0px solid #111;
        padding: 10px 18px;
    }

    .dashbord tr {
        border: 0.5px solid lightgrey;
    }

    .dashbord th {
        padding-top: 15px;
        vertical-align: top;
        padding-bottom: 15px;
        padding-left:15px;
       
    }

    div.dashboard {
    }

    table.overall {
        width: 50%;
        padding: 10px 18px;
        /* border: 1px solid red; */
    }

    .overall tr {
        border: 0px solid #fff;
    }

    .overall tr th {
        padding-left: 15px;
        padding-top: 0px;
        padding-bottom: 0px;
    }

    th.labeled {
        /*background-color:aliceblue;*/
        color: black;
        font-weight: bold;
        font-size: 18px;
        text-align: right;
        max-width: 150px;
        width: 1%;
        padding-right: 5px;
        vertical-align: bottom !important;
        padding-bottom: 0px;
        border: 0px solid #fff;
    }

    td.valued {
        border-bottom: 1px solid #111;
        padding-bottom: 0px;
        font-size: 20px;
        font-weight: 500;
        width: 100px;
        max-width: 100px !important;
        text-align: center;
    }

    table.machine-list {
        
        font-size: 12px;
        font-weight: 500;
    }

    table.machine-list th {
        color: #fff;
        
        text-align: center;
        font-weight: 500 !important;
    }

    table.machine-list td {
        font-weight: 500 !important;
        padding-left: 15px;
    }

    table.machine-list td.Vcenter {
        text-align: center;
        font-weight: 500 !important;
        padding-left: 15px;
    }
    .volume-list-5000 th{
        background-color: #005495;
        color: #fff;
    }
    .volume-list-10000 th{
        background-color: #005495;
        color: #fff;
    }
</style>
@using (Html.BeginForm("HANDHELD_SEARCH", "COPR16_COPRUNNING_RT"))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("UID", CM_APPLICATIONS.Models.AppPropModel.username)
<div class="form-horizontal">
    <table class="dashbord">
        <tr>
            <th colspan="2">
                <div class="form-horizontal">
                    <table class="overall"  style="width:300px">
                        <thead>
                            <tr>
                                <th class="labeled" >DATE:</th>
                                <td class="valued vDate" style="width:100px">@CM_APPLICATIONS.Models.AppPropModel.today.ToString("dd / MMM / yyyy")</td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <th class="labeled">TIME:</th>
                                <td class="valued vTime"  style="width:100px">00:00:00</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </th>
            
        </tr>
        <tr>
            <th rowspan="2" style="width:50%;">
                <div class="form-horizontal">
                    <h2>@Html.Label("", "MACHINES SUMMARY")</h2>
                    <table class="overall">
                        <thead>
                            <tr>
                                <th class="labeled">ALL:</th>
                                <td class="valued vALL">@Model.cOPR16_MACHINE_MSTR_List.Count</td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <th class="labeled">ACTIVED:</th>
                                <td class="valued vACTIVED">@Model.cOPR16_MACHINE_MSTR_List.Where(l=>l.FLGACT == true).Count()</td>
                            </tr>
                            <tr>
                                <th class="labeled">RUNNING: </th>
                                <td class="valued vRUNNING">0</td>
                            </tr>
                            <tr>
                                <th class="labeled">AVAIABLE: </th>
                                <td class="valued vAVAIABLE">0</td>
                            </tr>
                            <tr>
                                <th class="labeled">INACTIVE:</th>
                                <td class="valued vINACTIVE">@Model.cOPR16_MACHINE_MSTR_List.Where(l => l.FLGACT == false).Count()</td>
                            </tr>
                        </tbody>
                    </table>
                    <table class="table-striped  machine-list" >
                        <thead>
                            <tr>
                                <th class="labeled">TYPE</th>
                                <th class="labeled">NAME</th>
                                <th class="labeled">STATUS</th>
                                <th class="labeled">REF.</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                string mtype_id = "";
                                bool print = false;
                            }
                            @foreach (var item in Model.cOPR16_MACHINE_MSTR_List)
                            {
                                if (mtype_id != item.MTYPE_ID)
                                {
                                    mtype_id = item.MTYPE_ID;
                                    print = true;
                                }
                                else
                                {
                                    print = false;
                                }
                                <tr>
                                    <td class="labeled">
                                        @if (print)
                                        {
                                            @item.MTYPE_ID
                                        }
                                    </td>
                                    <td class="labeled">@item.MANC_ID @item.MANC_DESC</td>
                                    <td class="Vcenter v-@item.MANC_ID"></td>
                                    <td class="labeled r-@item.MANC_ID"></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </th>
            <th style="height:10%">
                <div class="form-horizontal">
                    <h2>@Html.Label("", "COP NO. SUMMARY")</h2>
                    <table class="overall" style="width:50%">
                        <thead>

                            @foreach (var item in Model.statusList)
                            {

                                <tr>
                                    <th class="labeled"> @Html.DisplayFor(modelItem => item.Value) : </th>
                                    <td class="valued v-@item.Value">
                                        @if (item.Value.Contains("ALL"))
                                        {
                                            @Model.cOPR16_COPRUNNING_List.Count
                                        }
                                        else
                                        {
                                            @Model.cOPR16_COPRUNNING_List.Where(l => l.COP_STATUS.Contains(item.Value)).Count()
                                        }

                                    </td>
                                </tr>

                            }
                        </thead>
                    </table>
                </div>
            </th>
        </tr>
        <tr>
            <th>
                <div class="form-horizontal">
                    <h2>@Html.Label("", "FG VOLUME SUMMARY")</h2>
                    <table style="border:0px solid blue !important;width:100%;">
                        <tr style="border:0px solid blue !important;">
                            <th style="border:0px solid blue !important;">
                                <h4>@Html.Label("", "FG VOLUME(5,000)")</h4>
                                <table class="volume-list-5000 table stripe ">
                                    <thead>
                                        <tr>
                                            <th style="width:10%">MODEL</th>
                                            <th class="labeled">QTY. </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.MODEL_LIST)
                                        {
                                            <tr>
                                                <td class="labeled" style="width:10%"> @item.Text</td>
                                                <td class="labeled">0</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>

                            </th>
                            <th style="border:0px solid blue !important;">
                                <h4>@Html.Label("", "FG VOLUME(10,000)")</h4>
                                <table class="volume-list-10000 table stripe ">
                                    <thead>
                                        <tr>
                                            <th style="width:10%">MODEL</th>
                                            <th class="labeled">QTY.</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.MODEL_LIST)
                                        {
                                        <tr>
                                            <td class="labeled" style="width:10%"> @item.Text</td>
                                            <td class="labeled">0</td>
                                        </tr>
                                        }
                                    
                                    </tbody>
                                </table>

                            </th>
                        </tr>
                    </table>
                </div>

            </th>
        </tr>
    </table>
</div>
}

<script>
    //machine-list

    var tbVar1 = $('.machine-list').DataTable({
        "orderable": false,
        "paging": false,
        "ordering": false,
        "info": false,
        "stripe": true,
        "searching": false,
        "search": false,
        "language": {
            "lengthMenu": "Display _MENU_ records per page",
            "zeroRecords": "No records available",
            "info": "Showing _START_-_END_ of _TOTAL_ rows",
            "infoEmpty": "No records available",
            "infoFiltered": "(filtered from _MAX_ total records)"
        }
    });
    var tbVar2 = $('.volume-list-5000').DataTable({
        "orderable": false,
        "paging": false,
        "ordering": false,
        "info": false,
        "stripe": true,
        "searching": false,
        "search": false,
        "language": {
            "lengthMenu": "Display _MENU_ records per page",
            "zeroRecords": "No records available",
            "info": "Showing _START_-_END_ of _TOTAL_ rows",
            "infoEmpty": "No records available",
            "infoFiltered": "(filtered from _MAX_ total records)"
        }
    });
    var tbVar3 = $('.volume-list-10000').DataTable({
        "orderable": false,
        "paging": false,
        "ordering": false,
        "info": false,
        "stripe": true,
        "searching": false,
        "search": false,
        "language": {
            "lengthMenu": "Display _MENU_ records per page",
            "zeroRecords": "No records available",
            "info": "Showing _START_-_END_ of _TOTAL_ rows",
            "infoEmpty": "No records available",
            "infoFiltered": "(filtered from _MAX_ total records)"
        }
    });
    function doDate()
    {
        var str = "";
        var now = new Date();
        var datestring = ("0" + now.getHours()).slice(-2) + ":" + ("0" + now.getMinutes()).slice(-2)+":" +("0" + now.getSeconds()).slice(-2);

        str = datestring;
        $('.vTime').html(str);
    }
    setInterval(doDate, 1000);
    function updateCopStat(data) {
        $.each(data, function (i, d, x) {
            console.log(d['COP_STATUS']);
            var statName = '.v-' + d['COP_STATUS'];
            $(statName).html(numberWithCommas(d['STATUS']));
            
        });
    }
    function updateMachineStat(data) {
        $.each(data, function (i, d, x) {
            console.log(d['ALL']);

            var statName = '.vALL';
            $(statName).html(d['ALL']);

            statName = '.vACTIVED';
            $(statName).html(d['ACTIVED']);

            statName = '.vRUNNING';
            $(statName).html(d['RUNNING']);
            statName = '.vAVAIABLE';
            $(statName).html(d['AVAIABLE']);

            statName = '.vINACTIVE';
            $(statName).html(d['INACTIVE']);
            
        });
    }
    function updateAllMachineStat(data) {
        $.each(data, function (i, d, x) {
            //console.log(d['MANC_ID']);
            var statNameV = '.v-' + d['MANC_ID'];
            var statNameR = '.r-' + d['MANC_ID'];
            var varStat = d['STATUS'];
            if (varStat == null || varStat == undefined) {
                varStat = "AVAIABLE";
            } else {
                varStat = "RUNNING";
            }

            $(statNameV).html(varStat);
            $(statNameR).html(d['COP_ID'] );
            
        });
    }
    function getAllCOPStatus() {
        
        var urlText = "@Url.Action("getAllCopSTatus","COPR16_COPRUNNING")";
        var options = { "backdrop": "static", keyboard: true };
        var jdata = { "__RequestVerificationToken" : $('input[name="__RequestVerificationToken"').val() }
        var modelString = "";
        $.ajax({
            type: "POST",
            url: urlText,     //your action
            data: jdata,
            success: function (result) {
                console.log(result);
                console.log(result.Data);
                updateCopStat(result.Data);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log("error:" + errorThrown);
            }
        }); 
    }
    
    setInterval(getAllCOPStatus, 5000);
    getAllCOPStatus();
    function getAllMachineStatus() {
        
        var urlText = "@Url.Action("getAllMachine","COPR16_COPRUNNING")";
        var options = { "backdrop": "static", keyboard: true };
        var jdata = { "__RequestVerificationToken" : $('input[name="__RequestVerificationToken"').val() }
        var modelString = "";
        $.ajax({
            type: "POST",
            url: urlText,     //your action
            data: jdata,
            success: function (result) {
                console.log(result);
                console.log(result.Data);
                updateMachineStat(result.Data[1]);
                updateAllMachineStat(result.Data[0]);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log("error:" + errorThrown);
            }
        }); 
    }
    
    setInterval(getAllMachineStatus, 5000);
    getAllMachineStatus();
    function updateModelStat1(data) {
        tbVar2.rows().clear().draw();
        $.each(data, function (i, d, x) {
            //console.log(d['MANC_ID']);
            var model_id = d['MODEL_ID'];
            var model_desc = d['MODEL_DESC'];
            var model_line = d['LINE_ID'];
            var model_pos = d['POS_DESC'];
            var rowList = [];
            rowList.push(model_id + " : " + model_line + " " + model_pos);
            rowList.push(numberWithCommas(d['QTY']));
            var rowNode = tbVar2.row.add(rowList).draw(false).node();

            $(rowNode).find('td').eq(1).addClass('rightText');
            //$(rowNode).find('td').eq(2).append(SelectBtn);
            //$(rowNode).find('td').eq(2).append(modelHidden);

        });
    }
    function updateModelStat2(data) {
        tbVar3.rows().clear().draw();
        $.each(data, function (i, d, x) {
            //console.log(d['MANC_ID']);
            var model_id = d['MODEL_ID'];
            var model_desc = d['MODEL_DESC'];
            var model_line = d['LINE_ID'];
            var model_pos = d['POS_DESC'];
            var rowList = [];
            rowList.push(model_id + " : " + model_line + " " + model_pos);
            rowList.push(numberWithCommas(d['QTY']));
            var rowNode = tbVar3.row.add(rowList).draw(false).node();

            $(rowNode).find('td').eq(1).addClass('rightText');
            //$(rowNode).find('td').eq(2).append(modelHidden);

        });
    }
    function getAllModelStatus() {
        
        
        var urlText = "@Url.Action("getAllModelStatus","COPR16_COPRUNNING")";
        var options = { "backdrop": "static", keyboard: true };
        var jdata = { "__RequestVerificationToken" : $('input[name="__RequestVerificationToken"').val() }
        var modelString = "";
        $.ajax({
            type: "POST",
            url: urlText,     //your action
            data: jdata,
            success: function (result) {
                console.log(result);
                console.log(result.Data);
                updateModelStat1(result.Data);
                updateModelStat2(result.Data);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log("error:" + errorThrown);
            }
        }); 
    }
    
    setInterval(getAllModelStatus, 10000);
    getAllModelStatus();
</script>